name: Test and Deploy Application

on:
#  workflow_dispatch:
  push:
    branches: ["staging-cd-2"]
#  pull_request:
#    types: [opened, synchronize]

env:
  NODE_VERSION: 18.17.1

jobs:
#  build-and-test:
#    name: Build and Test v1
#    timeout-minutes: 15
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 2
#
#      - name: Setup Node.js environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#          cache: 'yarn'
#
#      - name: Install dependencies
#        run: yarn
#
#      - name: Build
#        run: yarn build

  create-deployment-artifacts:
#    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build App Artifacts
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'yarn'
      - run: |
          touch .env
          echo APP_DOMAIN=https://vsf2.tm8.co.uk >> .env
          echo RELEASE_VERSION=${GITHUB_REF} >> .env
          echo GITHUB_SHA=${{ github.sha }} >> .env
          #... (your other env variables)
          yarn
          yarn build
          ls -la apps/web/.output # Debugging line to list contents of output directory
          ls -la apps/server # Debugging line to list contents of server directory
          cp .env apps/web/.output/server/.env
          cp .env apps/server/.env
          tar -czf "${GITHUB_SHA}".tar.gz apps/web/.output || echo "Failed to create web archive"
          tar -czf "${GITHUB_SHA}"-vsf_server.tar.gz -C apps/server . || echo "Failed to create server archive"
      

      #      - name: Test
#        run: yarn test

      # Deploy to DigitalOcean using SSH with username and password
#      - name: Install sshpass
#        run: sudo apt-get install -y sshpass
#
#      - name: Deploy to DigitalOcean Droplet via SSH (Username and Password)
#        run: |
#          sshpass -p "${{ secrets.SSH_PASSWORD }}" rsync -av --delete ./apps/web/.output/ www-data@${{ secrets.DO_IP }}:/var/www/html/vsf2_tiles247/
#          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh www-data@${{ secrets.DO_IP }} 'your post-deployment commands here'
#        env:
#          SSH_USERNAME: www-data
#          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
#          DO_IP: ${{ secrets.DO_IP }}

  deploy:
    name: Deploying with webhook
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts # This job depends on the 'test' job
    steps:
      - name: Trigger Webhook
        run: |
          curl -X POST https://vsf2.tm8.co.uk/webhook/deploy \
          -H "Content-Type: application/json" \
          -d '{
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref }}",
            "commit": "${{ github.sha }}",
            "user": "${{ github.actor }}"
          }'
#        env:
#          WEBHOOK_SECRET: ${{secrets.WEBHOOK_SECRET}}
